name: Python package

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # 対応する要件ファイルにキャッシュヒットがあるかどうかを確認する
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Run ruff
        run: ruff check .

  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.7]

  #   services:
  #     db:
  #       image: postgres
  #       env:
  #         POSTGRES_DB: postgres
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #       ports:
  #         - 5432:5432

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Cache pip
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pip
  #         # 対応する要件ファイルにキャッシュヒットがあるかどうかを確認する
  #         key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-
  #           ${{ runner.os }}-
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Build server
  #       env:
  #         GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  #         YOUR_CHANNEL_ACCESS_TOKEN: ${{ secrets.YOUR_CHANNEL_ACCESS_TOKEN }}
  #         YOUR_CHANNEL_SECRET: ${{ secrets.YOUR_CHANNEL_SECRET }}
  #         EXTERNAL_DATABASE_URL: mongodb://localhost:27017/
  #         DATABASE_NAME: db
  #         SERVER_URL: http://localhost:5000/
  #       run: |
  #         flask run

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
        mongodb-version: ["4.4"]

    steps:
      # 対象のブランチにチェックアウト
      - uses: actions/checkout@v3
      # Python の準備
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # 依存パッケージのキャッシュ管理
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # 対応する要件ファイルにキャッシュヒットがあるかどうかを確認する
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      # 依存パッケージのインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements.dev.txt ]; then pip install -r requirements.dev.txt; fi
      # テスト用 DB
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-port: 27017
      - name: Test with pytest
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          YOUR_CHANNEL_ACCESS_TOKEN: ${{ secrets.YOUR_CHANNEL_ACCESS_TOKEN }}
          YOUR_CHANNEL_SECRET: ${{ secrets.YOUR_CHANNEL_SECRET }}
          EXTERNAL_DATABASE_URL: mongodb://localhost:27017/
          DATABASE_NAME: db
          SERVER_URL: http://localhost:5000/
        run: |
          pytest --cov=src src/
